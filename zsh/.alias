alias ..='cd ..'
alias ...='cd ../..'
alias ll='ls -al'
alias ipy='ipython'
alias sb='source env/bin/activate'
alias de='deactivate'
alias pm='python manage.py'
alias pr='pipenv run'
alias pf="pipenv run fab"
alias ppm='pipenv run python manage.py'
alias pshell='pipenv shell'
alias ppmm='ppm makemigrations'
alias g='git'

alias gpath="cd $GOPATH/src/"

alias cgd='hexo clean && hexo g && hexo d'

# git
alias dbr='del(){ git br | grep $1 | xargs git br -D;};del'
alias rb-dev='rb-dev(){ git f z && git rebase z/dev;};rb-dev'
alias rb='rb(){ git f $1 && git rebase $1/$2;};rb'
alias show='show(){ git stash show -p stash@{$1};};show'
alias wip='wip(){ git add . && git ci -n -m "wip";};wip'
br() { git checkout -b $1 z/dev; }


# docker
alias d='docker'
alias dl='docker images'
alias dr='docker run -it'
alias db='docker build'
alias dc="docker-compose"
alias dps="docker ps"

alias drm='docker rm $(docker ps -a -q)'
drmi() { docker rmi `docker images | grep $1 | awk -F  ' ' '{print $3}'`; }

# k8s
alias k='kubectl'
alias kk='k9s'
alias km='kustomize'
alias kg='kubectl get'
alias kc='kubectl config'
alias ka='kubectl apply'
alias kd='kubectl delete'
alias kgp='kubectl get pod'
alias kex='kubectl exec -it'
alias kcg='kubectl config get-contexts'
alias kcu='kubectl config get-contexts -o name| fzf --preview "kubectl config use-context {} && kubectl get ns"'
alias kns='kubectl get ns -o name | sed "s/namespace\///" | fzf | xargs -I ns kubectl config set-context --current --namespace=ns'
kpm() { kex `kpo $1` pipenv run python manage.py shell; }
kpo() { kg po | grep $1 | head -n1 | cut -d" " -f1; }
ksh() { kex `kpo $1` -- bash; }

# fzf
alias gbr='git co `git br | fzf`'

# unalias z 2> /dev/null
# z() {
#     [ $# -gt 0 ] && _zlua "$*" && return
#     cd "$(_zlua -l 2>&1 | fzf --height 40% --nth 2.. --reverse --inline-info +s --tac --query "${*##-* }" | sed 's/^[0-9,.]* *//')"
# }

# lab
alias lb='lab browser'
alias lo='lab open -p'
alias lc='lab ci -l'
alias lcl='lab clone'
alias cs='cd `lab ws -d 5`'

# tmux
alias tt='tmux'

alias ls='exa --icons --no-user'
alias cat='bat'

alias vi='nvim'
alias vim='nvim'

function workup {
    if [[ -n "$TMUX" ]]
    then
        return 0
    fi
    tmux ls -F '#{session_name}' |
    fzf --bind=enter:replace-query+print-query |
    read session && tmux attach -t ${session:-default} || tmux new -s ${session:-default}
}
